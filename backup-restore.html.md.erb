---
title: Backing Up and Restoring CredHub Instances
owner: CredHub
---

<% if vars.platform_code == 'CF' %>
<div class="quick-links">
    <ul>
        <li><a href="#overview">Overview</a></li>
        <li><a href="#deployment-manifest">Back Up the Deployment Manifest</a></li>
        <li><a href="#encryption-keys">Back Up the Encryption Keys</a></li>
            <ul>
                <li><a href="#internal">Internal</a></li>
                <li><a href="#luna-hsm">Luna HSM</a></li>
                <li><a href="#encryption-frequency">Frequency</a></li>
            </ul>
        <li><a href="#database">Back Up the Database</a></li>
            <ul>
                <li><a href="#db-frequency">Frequency</a></li>
            </ul>
    </ul>
</div>

This topic describes how to back up and restore CredHub instances.


## <a name="overview"></a> Overview

CredHub does not store any stateful data. However, CredHub relies on components that do store stateful data.

If you use CredHub in production or a similar environment that needs resiliency, you should create backups regularly so you can recover in the event of a component failure.

The components you should back up are:

* Your CredHub deployment manifest. For more information, see [Back Up the Deployment Manifest](#deployment-manifest).

* Your CredHub encryption keys. For more information, see [Back Up the Encryption Keys](#encryption-keys).

* The database you configured for CredHub. For more information, see [Back Up the Database](#database).


## <a name="deployment-manifest"></a> Back Up the Deployment Manifest

Back up the CredHub deployment manifest every time you revise it. You may want to keep the backups in a revision control system so you can manage them automatically.

To download the most recent version of your CredHub deployment manifest, run:

```
bosh manifest -d DEPLOYMENT > MANIFEST.yml
```

Where:

* `DEPLOYMENT` is the name of your CredHub deployment.
* `MANIFEST` is the filename of your CredHub deployment manifest.


## <a name="encryption-keys"></a> Back Up the Encryption Keys

The process for backing up CredHub encryption keys differs based on the encryption provider you use. CredHub supports internal providers and Luna HSM.

### <a name="internal"></a> Internal

The internal provider performs encryption and decryption operations using a symmetrical AES key. This key is a hexadecimal value provided to the app during deployment.

Store the key in a secure place so you can use it in a future recovery deployment.

### <a name="luna-hsm"></a> Luna HSM

Luna Hardware Security Modules (HSMs) do not support traditional data export. HSMs are designed not to release key material once it is placed on the device.

This does not mean data lost from a Luna HSM is unrecoverable. You can configure your deployment to ensure that no data is lost if an HSM fails.

If you use a Luna HSM to store sensitive data, you can ensure data resiliency by:

* Setting up a redundant HSM configuration, or

* Managing a Luna Backup HSM device. For more information, see the [SafeNet Luna Network HSMs](https://safenet.gemalto.com/data-encryption/hardware-security-modules-hsms/safenet-network-hsm/) documentation.

CredHub supports management and integration with a high availability (HA) Luna HSM cluster. If you use this configuration, multiple HSMs use mirrored partitions to process incoming requests. Each HSM contains a copy of the encryption key. This provides redundancy, ensuring that all but one of your HSMs could fail without the losing the availability of key material.

If you use a Luna HSM from AWS, see [What Is AWS CloudHSM?](http://docs.aws.amazon.com/cloudhsm/latest/userguide/configuring-ha.html) in the AWS documentation.

### <a name="encryption-frequency"></a> Frequency

Back up the encryption keys whenever you rotate them to ensure that you always have access to the latest value.

Keep an archive of the encryption key values for each CredHub database backup you make. For example, if you maintain backups of the five most recent versions of your CredHub database, also save the five most recent encryption keys so you can access each backup.


## <a name="database"></a> Back Up the Database

CredHub stores the majority of its stateful data in the configured database. This database is not deployed or managed by CredHub, so backup procedures differ based on the selected database provider.

<p class='note'><strong>Note:</strong> After rotating the encryption key, test and verify a backup with the latest encryption key. This testing ensures that you are not locked out of your backups in the event of a rollback or other data loss.</p>

For more information about database backups, see [Chapter 7 Backup and Recovery](http://dev.mysql.com/doc/refman/5.7/en/backup-and-recovery.html) in the MySQL documentation and [Chapter 24. Backup and Restore](https://www.postgresql.org/docs/9.5/static/backup.html) in the PostgreSQL documentation.

### <a name="db-frequency"></a> Frequency

Database best practices dictate that you perform backups regularly, to avoid losing data if your database cluster fails. The right frequency varies based on the needs of your deployment.

<% else %>
In <%= vars.app_runtime_full %>, you can back up CredHub and its data with BOSH Backup and Restore (BBR). For more information, see <em>Backing Up and Restoring Deployments</em> in the CredHub documentation.

Ensure you also back up your encryption key. If you do not back up your encryption key, you cannot restore your BBR backups. For more information, see [Back Up the Encryption Keys](#encryption-keys).
<% end %>
